# Use Gitpod's default workspace with Docker Compose
image: gitpod/workspace-full

ports:
  - port: 8888
    name: Jupyter Notebook
    description: Jupyter notebook server for running the Iceberg PII deletion demo
    onOpen: open-preview
  - port: 9001
    name: MinIO Console
    description: MinIO web console for S3-compatible storage management
    onOpen: open-preview
  - port: 8080
    name: Spark UI
    description: Apache Spark web UI for monitoring jobs
    onOpen: open-preview
  - port: 8181
    name: Iceberg REST
    description: Apache Iceberg REST catalog service
    onOpen: open-preview

tasks:
  - name: Download JAR Dependencies
    init: |
      echo "üì¶ Downloading required JAR dependencies..."
      mkdir -p jars
      
      # Download Hadoop S3A JAR (matching Hadoop 3.3.4 in container)
      curl -L -o jars/hadoop-aws-3.3.4.jar \
        https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-aws/3.3.4/hadoop-aws-3.3.4.jar
      
      # Download AWS Java SDK Bundle
      curl -L -o jars/aws-java-sdk-bundle-1.12.262.jar \
        https://repo1.maven.org/maven2/com/amazonaws/aws-java-sdk-bundle/1.12.262/aws-java-sdk-bundle-1.12.262.jar
      
      echo "‚úÖ JAR dependencies downloaded successfully!"

  - name: Start Services
    init: |
      echo "üöÄ Starting Iceberg PII Deletion Demo services..."
      docker-compose up -d
      echo "‚è≥ Waiting for services to be ready..."
      sleep 15
      echo "‚úÖ Services started! Access the demo at:"
      echo "   üìì Jupyter Notebook: http://localhost:8888"
      echo "   üóÑÔ∏è  MinIO Console: http://localhost:9001 (admin/password)"
      echo "   ‚ö° Spark UI: http://localhost:8080"
      echo "   üßä Iceberg REST: http://localhost:8181"
      echo ""
      echo "üîç MinIO Exploration:"
      echo "   1. Open MinIO Console at http://localhost:9001"
      echo "   2. Login with admin/password"
      echo "   3. Navigate to the 'warehouse' bucket"
      echo "   4. Keep it open while running the Jupyter notebook"
      echo "   5. Watch files appear and disappear as you run each cell"
    command: |
      # Keep the services running and show logs
      docker-compose logs -f

vscode:
  extensions:
    - ms-python.python
    - ms-toolsai.jupyter
    - redhat.java
    - vscjava.vscode-java-pack
    - ms-vscode.vscode-docker
    - ms-kubernetes-tools.vscode-kubernetes-tools

# Environment variables
env:
  - name: AWS_ACCESS_KEY_ID
    value: admin
  - name: AWS_SECRET_ACCESS_KEY
    value: password
  - name: AWS_REGION
    value: us-east-1
